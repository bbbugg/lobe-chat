name: Docker Image CI

on:
  push:
    branches: [ "next" ]
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # 这个权限用于标记容器镜像
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 登录到 GitHub Container Registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # 变化 1: 指定 Dockerfile 的路径
          file: Dockerfile
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          load: false
          # 变化 2: 直接指定镜像的标签
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # 变化 3: 添加构建参数，强烈建议使用 secrets
          build-args: |
            FEATURE_FLAGS=-welcome_suggest,+api_key_manage
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
            NEXT_PUBLIC_ENABLE_NEXT_AUTH=0
            NEXT_PUBLIC_ENABLE_CLERK_AUTH=1
            NEXT_PUBLIC_BRANDING_DOMAIN=${{ secrets.BRANDING_DOMAIN }}
            NEXT_PUBLIC_BRANDING_NAME=${{ secrets.BRANDING_NAME }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }}
